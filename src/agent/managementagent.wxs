<?xml version='1.0' encoding='windows-1252' ?>

<!--
 Copyright (c) Citrix Systems Inc.
 All rights reserved.

 Redistribution and use in source and binary forms, 
 with or without modification, are permitted provided 
 that the following conditions are met:

 *   Redistributions of source code must retain the above 
     copyright notice, this list of conditions and the 
     following disclaimer.
 *   Redistributions in binary form must reproduce the above 
     copyright notice, this list of conditions and the 
     following disclaimer in the documentation and/or other 
     materials provided with the distribution.

 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND 
 CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, 
 INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
 MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE 
 DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
 CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
 SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, 
 BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
 SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS 
 INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, 
 WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
 NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE 
 OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
 SUCH DAMAGE.
-->

<Wix xmlns='http://schemas.microsoft.com/wix/2006/wi'
    xmlns:netfx="http://schemas.microsoft.com/wix/NetFxExtension"
    xmlns:util="http://schemas.microsoft.com/wix/UtilExtension"
    >

    <?include verinfo.wxi ?>
    <?include branding.$(var.culture).wxi ?>
    <?define CurrentMajorVersion = '$(var.BRANDING_MAJOR_VERSION_STR)' ?>
    <?define CurrentMinorVersion = '$(var.BRANDING_MINOR_VERSION_STR)' ?>
    <?define CurrentMicroVersion = '$(var.BRANDING_MICRO_VERSION_STR)' ?>
    <?define CurrentBuildVersion = '$(var.BRANDING_BUILD_NR_STR)' ?>

    <?define Brand = '$(var.BRANDING_manufacturer)' ?>
    <?define Product = '$(var.BRANDING_hypervisorProduct)' ?>
    <?define Agent = '$(var.BRANDING_managementName)' ?>
    <?define Install = '$(var.BRANDING_managementDesc)' ?>

     <?if $(var.arch)=x64 ?>
      <?define UpgradeCode = '48e5492c-6843-452e-97a2-a5fe2d24b141' ?>
      <?define ProductId = '*' ?>
      <?define dn4id = 'ea3e02ec-df6c-45ae-94a4-a52c5ce39b4c' ?>
      <?define supportid = '3da541d4-ce74-49e9-a838-0e8ad9f2a433' ?>
      <?define XenVssComponentGUID = 'bb4ad259-a748-4a92-b265-5635cae68e42' ?>
      <?define RegEntryGuid="A42D7BC2-2134-53E1-8046-E2C13B19FF8B" ?>
      <?define pf="ProgramFiles64Folder" ?>
    <?else?>
      <?define UpgradeCode = 'EE3B949D-C431-462b-B6DC-5BEDA078D772' ?>
      <?define ProductId = '*' ?>
      <?define dn4id = '5cba312f-8c09-4f2b-a6ea-bc522b5caef4' ?>
      <?define supportid = '10f225c1-bb4e-4e2a-bef9-08ed0c297a15' ?>
      <?define XenVssComponentGUID = 'bb4ad259-a748-4a92-b265-5635cae68e42' ?>
      <?define pf="ProgramFilesFolder" ?>
      <?define RegEntryGuid="DA4B51DE-1C10-5067-A3EE-58EE9145ED1C" ?>
    <?endif?>
    <?define certs= 'f056d833-6b1f-4c9d-9636-f26ff3a75292' ?>

  <Product Name='$(var.Brand) $(var.Product) $(var.Agent)' Id='$(var.ProductId)'
           Language='$(var.BRANDING_language)' Codepage='1252' Version='$(var.CurrentMajorVersion).$(var.CurrentMinorVersion).$(var.CurrentBuildVersion)' Manufacturer='$(var.Brand)'
           UpgradeCode='$(var.UpgradeCode)' >
    <Package Id='*' Keywords='$(var.Brand) $(var.Product) $(var.Agent)' Description='$(var.Agent)'
             Comments='Installs $(var.Brand) $(var.Product) $(var.Agent)' Manufacturer='$(var.Brand)'
             InstallerVersion='200' Languages='$(var.BRANDING_languages)' Compressed='yes'
             InstallScope='perMachine'
             InstallPrivileges="elevated"
             Platform='$(var.arch)'
             SummaryCodepage='1252' />

   <Icon Id="icon.ico" SourceFile="$(var.RESOURCES_Bitmaps)\$(var.RESOURCE_icon)"/>
   <Property Id="ARPPRODUCTICON" Value="icon.ico" />
    <Property Id="REINSTALLMODE" Value="dmus" />

    <Property Id="MSIRESTARTMANAGERCONTROL" Value="Disable" />
    <Property Id="WIXUI_INSTALLDIR" Value="INSTALLDIR" />     
    <WixVariable Id="WixUIBannerBmp" Value="$(var.RESOURCES_Bitmaps)\BannrBmp.bmp" />
    <WixVariable Id="WixUIDialogBmp" Value="$(var.RESOURCES_Bitmaps)\DlgBmp.bmp" />
    <WixVariable Id="WixUIExclamationIco" Value="$(var.RESOURCES_Bitmaps)\exclamic.ico" />
    <WixVariable Id="WixUIInfoIco" Value="$(var.RESOURCES_Bitmaps)\info.ico" />
    <WixVariable Id="WixUINewIco" Value="$(var.RESOURCES_Bitmaps)\New.ico" />
    <WixVariable Id="WixUIUpIco" Value="$(var.RESOURCES_Bitmaps)\Up.ico" />


    <UI Id="MyUI">
        <Dialog Id="InstallChoicesDlg" Width="370" Height="270" Title="[ProductName] Setup" >
            <Control Id="BannerBmp" Type="Bitmap" Text="WixUI_Bmp_Banner" X="0" Y="0" Width="370" Height="44" />
            <Control Id="Title" Type="Text" X="15" Y="6" Width="200" Height="15" Transparent="yes" NoPrefix="yes" Text="{\WixUI_Font_Title}$(var.BRANDING_installAndUpdateTitle)" />
            <Control Id="Description" Type="Text" X="25" Y="23" Width="340" Height="15" Transparent="yes" NoPrefix="yes" Text="$(var.BRANDING_installAndUpdateDesc)" />
            
            <Control Id="TextNow" Type="Text" X="20" Y="60" Width="340" Height="15" Transparent="yes" NoPrefix="yes" Text="$(var.BRANDING_ioDesc)" />
            <Control Id="InstallNow" Type="CheckBox" CheckBoxValue="1" Property="InstallDriversGUI" Text="$(var.BRANDING_ioInstall)" X="20" Y="75" Width="290" Height="15" />

            <Control Id="TextAuto" Type="Text" X="20" Y="100" Width="340" Height="15" Transparent="yes" NoPrefix="yes" Text="$(var.BRANDING_mgmtDesc)" NoWrap="no" />
            <Control Id="AutoUpdate" Type="ComboBox" ComboList="yes" X="20" Y="115" Width="290" Height="30" Property="ALLOWAUTOUPDATE" >
                <ComboBox Property="ALLOWAUTOUPDATE">
                    <ListItem Text="$(var.BRANDING_mgmtAllow)" Value="YES"/>
                    <ListItem Text="$(var.BRANDING_mgmtDisallow)" Value="NO"/>
                </ComboBox>
            </Control>

            <Control Id="TextDriver" Type="Text" X="20" Y="145" Width="340" Height="15" Transparent="yes" NoPrefix="yes" Text="$(var.BRANDING_ioUpdDesc)" NoWrap="no">
            </Control>
            <Control Id="TextUpdate" Type="Text" X="20" Y="160" Width="340" Height="15" Transparent="yes" NoPrefix="yes" Text="$(var.BRANDING_whqlWarn)" NoWrap="no">
            </Control>
            <Control Id="DriverUpdate" Type="ComboBox" ComboList="yes" X="20" Y="175" Width="290" Height="30" Property="ALLOWDRIVERUPDATE" >
                <ComboBox Property="ALLOWDRIVERUPDATE">
                    <ListItem Text="$(var.BRANDING_ioUpdAllow)" Value="YES"/>
                    <ListItem Text="$(var.BRANDING_ioUpdDisallow)" Value="NO"/>
                </ComboBox>
                <Condition Action="disable">ALLOWAUTOUPDATE="NO"</Condition>
                <Condition Action="enable">ALLOWAUTOUPDATE="YES"</Condition>
            </Control>
            <Control Id="AnonymousUsage" Type="CheckBox" CheckBoxValue="1" Property="IdentifyCheck" Text="$(var.BRANDING_anonymousUsage)" X="20" Y="200" Width="290" Height="15" />
            <Control Id="TextDisclaim" Type="Text" X="20" Y="220" Width="340" Height="15" Transparent="yes" NoPrefix="yes" Text="$(var.BRANDING_updDisclaim)" NoWrap="no" />
            <Control Id="Next" Text="!(loc.WixUINext)" Type="PushButton" X="236" Y="243" Width="56" Height="17" Default="yes" >
                <Publish Event="NewDialog" Value="VerifyReadyDlg"></Publish>
            </Control>
            <Control Id="Back" Text="!(loc.WixUIBack)" Type="PushButton" X="180" Y="243" Width="56" Height="17" Default="no" >
                <Publish Event="NewDialog" Value="InstallDirDlg"></Publish>
            </Control>
            <Control Id="Cancel" Text="!(loc.WixUICancel)" Cancel="yes" Type="PushButton" X="304" Y="243" Width="56" Height="17" Default="no" >
                <Publish Event="SpawnDialog" Value="CancelDlg"></Publish>
            </Control>

            <Control Id="BannerLine" Type="Line" X="0" Y="44" Width="370" Height="0" />
            <Control Id="BottomLine" Type="Line" X="0" Y="234" Width="370" Height="0" />
        </Dialog>
        

         <TextStyle Id="WixUI_Font_Normal" FaceName="Tahoma" Size="8" />
            <TextStyle Id="WixUI_Font_Bigger" FaceName="Tahoma" Size="12" />
            <TextStyle Id="WixUI_Font_Title" FaceName="Tahoma" Size="9" Bold="yes" />

            <Property Id="DefaultUIFont" Value="WixUI_Font_Normal" />
            <Property Id="WixUI_Mode" Value="InstallDir" />
            <Property Id="InstallDriversNow" Value="1" />
            <Property Id="DriverUpdateResp" Value="NO" />

            <DialogRef Id="BrowseDlg" />
            <DialogRef Id="DiskCostDlg" />
            <DialogRef Id="ErrorDlg" />
            <DialogRef Id="FatalError" />
            <DialogRef Id="FilesInUse" />
            <DialogRef Id="MsiRMFilesInUse" />
            <DialogRef Id="PrepareDlg" />
            <DialogRef Id="ProgressDlg" />
            <DialogRef Id="ResumeDlg" />
            <DialogRef Id="UserExit" />
            
            <Publish Dialog="BrowseDlg" Control="OK" Event="DoAction" Value="WixUIValidatePath" Order="3">1</Publish>
            <Publish Dialog="BrowseDlg" Control="OK" Event="SpawnDialog" Value="InvalidDirDlg" Order="4"><![CDATA[WIXUI_INSTALLDIR_VALID<>"1"]]></Publish>

            <Publish Dialog="ExitDialog" Control="Finish" Event="EndDialog" Value="Return" Order="999">1</Publish>

            <Publish Dialog="WelcomeDlg" Control="Next" Event="NewDialog" Value="LicenseAgreementDlg">NOT Installed</Publish>
            <Publish Dialog="WelcomeDlg" Control="Next" Event="NewDialog" Value="VerifyReadyDlg">Installed AND PATCH</Publish>

            <Publish Dialog="LicenseAgreementDlg" Control="Back" Event="NewDialog" Value="WelcomeDlg">1</Publish>
            <Publish Dialog="LicenseAgreementDlg" Control="Next" Event="NewDialog" Value="InstallDirDlg">LicenseAccepted = "1"</Publish>

            <Publish Dialog="InstallDirDlg" Control="Back" Event="NewDialog" Value="LicenseAgreementDlg">1</Publish>
            <Publish Dialog="InstallDirDlg" Control="Next" Event="SetTargetPath" Value="[WIXUI_INSTALLDIR]" Order="1">1</Publish>
            <Publish Dialog="InstallDirDlg" Control="Next" Event="DoAction" Value="WixUIValidatePath" Order="2">NOT WIXUI_DONTVALIDATEPATH</Publish>
            <Publish Dialog="InstallDirDlg" Control="Next" Event="SpawnDialog" Value="InvalidDirDlg" Order="3"><![CDATA[NOT WIXUI_DONTVALIDATEPATH AND WIXUI_INSTALLDIR_VALID<>"1"]]></Publish>
        <Publish Dialog="InstallDirDlg" Control="Next" Event="NewDialog" Value="InstallChoicesDlg" Order="4">WIXUI_DONTVALIDATEPATH OR WIXUI_INSTALLDIR_VALID="1"</Publish>
            <Publish Dialog="InstallDirDlg" Control="ChangeFolder" Property="_BrowseProperty" Value="[WIXUI_INSTALLDIR]" Order="1">1</Publish>
            <Publish Dialog="InstallDirDlg" Control="ChangeFolder" Event="SpawnDialog" Value="BrowseDlg" Order="2">1</Publish>
            
            <Publish Dialog="VerifyReadyDlg" Control="Back" Event="NewDialog" Value="InstallChoicesDlg" Order="1">NOT Installed</Publish>
            <Publish Dialog="VerifyReadyDlg" Control="Back" Event="NewDialog" Value="MaintenanceTypeDlg" Order="2">Installed AND NOT PATCH</Publish>
            <Publish Dialog="VerifyReadyDlg" Control="Back" Event="NewDialog" Value="WelcomeDlg" Order="2">Installed AND PATCH</Publish>

            <Publish Dialog="MaintenanceWelcomeDlg" Control="Next" Event="NewDialog" Value="MaintenanceTypeDlg">1</Publish>

            <Publish Dialog="MaintenanceTypeDlg" Control="RepairButton" Event="NewDialog" Value="VerifyReadyDlg">1</Publish>
            <Publish Dialog="MaintenanceTypeDlg" Control="RemoveButton" Event="NewDialog" Value="VerifyReadyDlg">1</Publish>
            <Publish Dialog="MaintenanceTypeDlg" Control="Back" Event="NewDialog" Value="MaintenanceWelcomeDlg">1</Publish>

            <Property Id="ARPNOMODIFY" Value="1" />

        <UIRef Id="WixUI_Common" />

        
        
    </UI>

    <MajorUpgrade
        AllowDowngrades="yes" 
        Schedule="afterInstallInitialize" />

    <Upgrade Id='$(var.UpgradeCode)'>
        <UpgradeVersion Minimum='$(var.CurrentMajorVersion).$(var.CurrentMinorVersion).$(var.CurrentBuildVersion)'
                        IncludeMinimum='no'
                        OnlyDetect='yes'
                        Property='UPGRADINGNEWERVERSION' />
    </Upgrade>
    <Property Id='FORCEINSTALL' Value='0'/>


    <Condition Message="$(var.BRANDING_laterVersion)">
        <![CDATA[((NOT UPGRADINGNEWERVERSION) OR (FORCEINSTALL="1"))]]>
    </Condition>

    <?if $(var.arch)=x86?>
      <Condition Message="$(var.BRANDING_32BitNotOn64)">
          <![CDATA[Not VersionNT64]]>
      </Condition>
    <?endif?>
    <Property Id="NETFRAMEWORK4XFULL">
        <RegistrySearch Id="NetFramework4xFull" Root="HKLM" 
            Key="Software\Microsoft\NET Framework Setup\NDP\v4\Full"
            Name="Install"
            Type="raw" />
    </Property>
    <Property Id="NETFRAMEWORK4XCLIENT">
        <RegistrySearch Id="NetFramework4xClient" Root="HKLM" 
            Key="Software\Microsoft\NET Framework Setup\NDP\v4\Client"
            Name="Install"
            Type="raw" />
    </Property>
    <Property Id="XENTOOLSEXISTS">
        <RegistrySearch Id="XenToolsExists" Root="HKLM" 
            Key="Software\Citrix\XenTools"
            Name="MajorVersion"
            Type="raw" 
            Win64="no" />
    </Property>
    <Property Id="XENTOOLSISMSI">
        <RegistrySearch Id="XenToolsIsMsi" Root="HKLM" 
            Key="Software\Citrix\XenTools"
            Name="MsiGuestAgent"
            Type="raw" 
            />
    </Property>
    <Property Id="NETFRAMEWORKX35">
        <RegistrySearch Id="NetFrameworkX35" Root="HKLM" 
            Key="Software\Microsoft\NET Framework Setup\NDP\v3.5"
            Name="Install"
            Type="raw" />
    </Property>
    <Condition Message="$(var.BRANDING_windowsRequired)">
        <![CDATA[Installed OR (VersionNT>=600)]]>
    </Condition>
    
    <Condition Message="$(var.BRANDING_errDotNetNeeded)">
        <![CDATA[Installed OR (( NETFRAMEWORK4XFULL OR NETFRAMEWORK4XCLIENT) OR NETFRAMEWORKX35 )]]>
    </Condition>

    <Property Id='HOSTTIME'>
        <RegistrySearch Id='RememberHostTime'
                        Root='HKLM'
                        Key='SOFTWARE\Citrix\XenTools'
                        Name='HostTime'
                        Type='raw' 
                        Win64='no'/>
    </Property>
    <Property Id='HOSTTIME64'>
        <RegistrySearch Id='RememberHostTime64'
                        Root='HKLM'
                        Key='SOFTWARE\Citrix\XenTools'
                        Name='HostTime'
                        Type='raw' 
                        Win64='yes'/>
    </Property>

    <!-- Parameters -->
    <!-- -DALLOWAUTOUPDATE[=YES/NO] -->
      <Property Id="ALLOWAUTOUPDATE" Value="MAYBE" />
      <CustomAction Id="brandAutoUpdate" Property="ALLOWAUTOUPDATE" Value="$(var.BRANDING_allowAutoUpdate)" />
      <CustomAction Id="yesAutoUpdate" Property="ALLOWAUTOUPDATE" Value="YES" />
      <CustomAction Id="noAutoUpdate" Property="ALLOWAUTOUPDATE" Value="NO" />
      <Property Id="REGAUTOUPDATE">
          <RegistrySearch Id="RegAutoUpdateSearch"
              Root='HKLM'
              Key='Software\Citrix\XenTools'
              Name='DisableAutoUpdate'
              Type="raw" 
          />
      </Property>
      <CustomAction Id="yesRegAutoUpdate" Property="DISABLEAUTOUPDATE" Value="0" />
      <CustomAction Id="noRegAutoUpdate" Property="DISABLEAUTOUPDATE" Value="1" />

    <!-- -DIDENTIFYAUTOUPDATE [=YES/NO] -->
      <Property Id="IDENTIFYAUTOUPDATE" Value="MAYBE" />
      <CustomAction Id="yesIdentify" Property="IDENTIFYAUTOUPDATE" Value="YES" />
      <CustomAction Id="noIdentify" Property="IDENTIFYAUTOUPDATE" Value="NO" />
      <Property Id="IdentifyCheck" Value="1" />
      <CustomAction Id="yesIdentifyGUI" Property="IdentifyCheck" Value="1" />
      <CustomAction Id="noIdentifyGUI" Property="IdentifyCheck" Value="" />
      <Property Id="REGIDENTIFY" Value="XXX">
          <RegistrySearch Id="RegIdentifySearch"
              Root='HKLM'
              Key='Software\Citrix\XenTools\AutoUpdate'
              Name='Identify'
              Type="raw" 
              />
      </Property>
      <CustomAction Id="regIdentifyAutoUpdate" Property="IDENTIFYAUTOUPDATE" Value="[REGIDENTIFY]" />
      
    <!-- -DALLOWDRIVERINSTALL[=YES/NO] -->
      <Property Id="ALLOWDRIVERINSTALL" Value="MAYBE" />
      <CustomAction Id="brandDriverInstall" Property="ALLOWDRIVERINSTALL" Value="$(var.BRANDING_allowDriverInstall)" />
      <CustomAction Id="yesDriverInstall" Property="ALLOWDRIVERINSTALL" Value="YES" />
      <CustomAction Id="noDriverInstall" Property="ALLOWDRIVERINSTALL" Value="NO" />
      <Property Id="InstallDriversGUI" Value="XXX" />
      <CustomAction Id="yesInstallDriversGUI" Property="InstallDriversGUI" Value="1" />
      <CustomAction Id="noInstallDriversGUI" Property="InstallDriversGUI" Value="" />
      <Property Id="REGDRIVERINSTALL" Value="XXX">
          <RegistrySearch Id="RegDriverInstallSearch"
              Root='HKLM'
              Key='$(var.BRANDING_installAgentRegKey)'
              Name='InstallDrivers'
              Type="raw" 
              />
      </Property>
      <CustomAction Id="regDriverInstall" Property="ALLOWDRIVERINSTALL" Value="[REGDRIVERINSTALL]" />
    <!-- -DALLOWDRIVERUPDATE[=YES/NO] -->
      <Property Id="ALLOWDRIVERUPDATE" Value="MAYBE" />
      <CustomAction Id="brandDriverUpdate" Property="ALLOWDRIVERUPDATE" Value="$(var.BRANDING_allowDriverUpdate)" />
      <Property Id="REGDRIVERUPDATE" Value="XXX">
          <RegistrySearch Id="RegDriverUpdateSearch"
              Root='HKLM'
              Key='Software\Citrix\XenTools\AutoUpdate'
              Name='InstallDrivers'
              Type="raw" 
              />
      </Property>
      <CustomAction Id="regDriverUpdate" Property="ALLOWDRIVERUPDATE" Value="[REGDRIVERUPDATE]" />
      

    


    <CustomAction Id="SaveCmdLineHosttime"
                  Property="CMDLINE_HOSTTIME"
                  Value="[HOSTTIME]"
                  Execute="firstSequence" />
    <CustomAction Id="SetFromCmdLineHosttime"
                  Property="HOSTTIME"
                  Value="[CMDLINE_HOSTTIME]"
                  Execute="firstSequence" />
    <CustomAction Id="SetFromHosttime64"
                  Property="HOSTTIME"
                  Value="[HOSTTIME64]"
                  Execute="firstSequence" />
	<CustomAction Id="RegisterUpdateTask"
				  FileKey="ManagementAgentUpdaterExe"
				  ExeCommand="add"
				  Execute="deferred"
				  Impersonate="no"
				  Return="ignore" />
	<CustomAction Id="DeregisterUpdateTask"
				  FileKey="ManagementAgentUpdaterExe"
				  ExeCommand="remove"
				  Execute="deferred"
				  Impersonate="no"
				  Return="ignore" />


    <CustomAction Id="SetREBOOTOPTION" Property="REBOOTOPTION" Value="DEFAULT" />
    <CustomAction Id="RebootOptionForce" Property="REBOOTOPTION" Value="AUTOREBOOT" />
    <CustomAction Id="RebootOptionForceDisableForce" Property="REBOOT" Value="ReallySuppress" />
    <CustomAction Id="RebootOptionNone" Property="REBOOTOPTION"  Value="NOREBOOT" />

    <CustomAction Id="SetINSTALLMODE" Property="INSTALLMODE" Value="FULL" />
    <CustomAction Id="InstallModeQuiet" Property="INSTALLMODE" Value="QUIET" />
    <CustomAction Id="InstallModePassive" Property="INSTALLMODE" Value="PASSIVE" />
    <Property Id="QtExecCmdLine" Value="&quot;[SystemFolder]\net.exe&quot; stop $(var.BRANDING_guestServiceShort)" />
    <CustomAction Id="StopServ" BinaryKey="WixCA" DllEntry="CAQuietExec" Execute="immediate" Impersonate="no" Return="ignore" />

    <Binary Id="ManagementAgentCA"
            SourceFile="Libraries\ManagementAgentCA.dll" />

    <Property Id="INITIATORSID" Secure="yes" />

    <CustomAction Id="SetINITIATORSID"
                  BinaryKey="ManagementAgentCA"
                  DllEntry="SetInitiatorSidProperty"
                  Execute="immediate"
                  Impersonate="yes"
                  Return="check" />

    <CustomAction Id="UninstallExe"
                  FileKey="UninstallerExe"
                  Execute="deferred"
                  ExeCommand = ""
                  Impersonate="no"
                  Return="ignore" />


    <InstallUISequence>
        <Custom Action="regIdentifyAutoUpdate" Before="regDriverInstall">
            ((IDENTIFYAUTOUPDATE="MAYBE") AND ((REGIDENTIFY="YES") OR (REGIDENTIFY="NO")))
        </Custom>
        <Custom Action="regDriverInstall" Before="brandDriverUpdate">
            (Installed AND (NOT UPGRADINGPRODUCTCODE))
        </Custom>
        <Custom Action="brandDriverUpdate" Before="regDriverUpdate">
            ((ALLOWDRIVERUPDATE="MAYBE") AND (NOT ((REGDRIVERUPDATE="YES") OR (REGDRIVERUPDATE="NO"))))
        </Custom>
        <Custom Action="regDriverUpdate" Before="brandDriverInstall">
            ((ALLOWDRIVERUPDATE="MAYBE") AND (((REGDRIVERUPDATE="YES") OR (REGDRIVERUPDATE="NO"))))
        </Custom>

        <Custom Action="brandDriverInstall" Before="noInstallDriversGUI">
            ALLOWDRIVERINSTALL="MAYBE"
        </Custom>
        <Custom Action="noInstallDriversGUI" Before="yesInstallDriversGUI">
            ALLOWDRIVERINSTALL="NO"
        </Custom>
        <Custom Action="yesInstallDriversGUI" Before="yesIdentifyGUI">
            ALLOWDRIVERINSTALL="YES"
        </Custom>
        <Custom Action="yesIdentifyGUI" Before="noIdentifyGUI">
            ((IDENTIFYAUTOUPDATE="YES") OR (IDENTIFYAUTOUPDATE="MAYBE"))
        </Custom>
        <Custom Action="noIdentifyGUI" Before="brandAutoUpdate">
            IDENTIFYAUTOUPDATE="NO"
        </Custom>
        <Custom Action="brandAutoUpdate" Before="noAutoUpdate">
            ((ALLOWAUTOUPDATE="MAYBE") AND (NOT REGAUTOUPDATE="#0") AND (NOT REGAUTOUPDATE="#1"))
        </Custom>
        <Custom Action="noAutoUpdate" Before="yesAutoUpdate">
            ((ALLOWAUTOUPDATE="MAYBE") AND (REGAUTOUPDATE="#1"))
        </Custom>
        <Custom Action="yesAutoUpdate" Before="MaintenanceWelcomeDlg">
            ((ALLOWAUTOUPDATE="MAYBE") AND (REGAUTOUPDATE="#0"))
        </Custom>
        
        <Custom Action="noDriverInstall" After="ProgressDlg"> 
            (NOT InstallDriversGUI="1")
        </Custom>
        <Custom Action="yesDriverInstall" After="noDriverInstall">
            InstallDriversGUI="1"
        </Custom>
        <Custom Action="yesIdentify" After="yesDriverInstall">
            IdentifyCheck="1"
        </Custom>
        <Custom Action="noIdentify" After="yesIdentify">
            (NOT IdentifyCheck="1")
        </Custom>
        <ExecuteAction Sequence="5000" />

        </InstallUISequence>

        <InstallExecuteSequence>
        <Custom Action="SaveCmdLineHosttime" Before="AppSearch"/>
        <Custom Action="SetFromHosttime64" After="AppSearch">
            ((NOT HOSTTIME64="") AND (NOT CMDLINE_HOSTTIME))
        </Custom>
        <Custom Action="brandAutoUpdate" After="SetFromHosttime64">
            ((ALLOWAUTOUPDATE="MAYBE") AND (NOT REGAUTOUPDATE="#0") AND (NOT REGAUTOUPDATE="#1"))
        </Custom>
        <Custom Action="noAutoUpdate" After="brandAutoUpdate">
            ((ALLOWAUTOUPDATE="MAYBE") AND (REGAUTOUPDATE="#1"))
        </Custom>
        <Custom Action="yesAutoUpdate" After="noAutoUpdate">
            ((ALLOWAUTOUPDATE="MAYBE") AND (REGAUTOUPDATE="#0"))
        </Custom>
        <Custom Action="regDriverInstall" After="yesAutoUpdate">
            ((ALLOWDRIVERINSTALL="MAYBE") AND (Installed AND (NOT UPGRADINGPRODUCTCODE)))
        </Custom>
        <Custom Action="regIdentifyAutoUpdate" After="regDriverInstall">
            ((IDENTIFYAUTOUPDATE="MAYBE") AND (Installed AND (NOT UPGRADINGPRODUCTCODE)))
        </Custom>
        <Custom Action="yesIdentify" After="regIdentifyAutoUpdate">
            IDENTIFYAUTOUPDATE="MAYBE"
        </Custom>
        <Custom Action="brandDriverUpdate" After="yesIdentify">
            ((ALLOWDRIVERUPDATE="MAYBE") AND (NOT ((REGDRIVERUPDATE="YES") OR (REGDRIVERUPDATE="NO"))))
        </Custom>
         <Custom Action="brandDriverInstall" After="brandDriverUpdate">
            ALLOWDRIVERINSTALL="MAYBE"
        </Custom>
        <Custom Action="regDriverUpdate" After="brandDriverInstall">
            ((ALLOWDRIVERUPDATE="MAYBE") AND (((REGDRIVERUPDATE="YES") OR (REGDRIVERUPDATE="NO"))))
        </Custom>
        <Custom Action="StopServ" Before="InstallInitialize"/>
        <Custom Action="SetFromCmdLineHosttime" After="AppSearch">
            CMDLINE_HOSTTIME
        </Custom>
		 <Custom Action="DeregisterUpdateTask" Before="RemoveFiles">
			Installed
		 </Custom>
		 <Custom Action="RegisterUpdateTask" After="InstallFiles">
			NOT Installed
        </Custom>
        <Custom Action="noRegAutoUpdate" Before="SetREBOOTOPTION">
            ALLOWAUTOUPDATE="NO"
        </Custom>
        <Custom Action="yesRegAutoUpdate" Before="SetREBOOTOPTION">
            ALLOWAUTOUPDATE="YES"
        </Custom>
        <Custom Action="SetREBOOTOPTION" Before="WriteRegistryValues" />
        <Custom Action="RebootOptionForce" After="SetREBOOTOPTION">
            REBOOT="Force"
        </Custom>
        <Custom Action="RebootOptionNone" After="SetREBOOTOPTION">
            REBOOT="Suppress" OR REBOOT="ReallySuppress"
        </Custom>
        <Custom Action="RebootOptionForceDisableForce" After="RebootOptionNone">
            REBOOT="Force"
        </Custom>
        <Custom Action="SetINSTALLMODE" Before="WriteRegistryValues" />
        <Custom Action="InstallModeQuiet" After="SetINSTALLMODE">
            UILevel=2
        </Custom>
        <Custom Action="InstallModePassive" After="SetINSTALLMODE">
            UILevel=3 OR UILevel=4
        </Custom>
        <Custom Action="SetINITIATORSID" Before="WriteRegistryValues" />
        <Custom Action="UninstallExe" Before="RemoveRegistryValues">
            (NOT UPGRADINGPRODUCTCODE) AND (REMOVE="ALL")
        </Custom>
        <ScheduleReboot After="InstallFinalize">
            (NOT UPGRADINGPRODUCTCODE) AND (REMOVE="ALL")
        </ScheduleReboot>
    </InstallExecuteSequence>



    <Media Id='1' Cabinet='ManagementAgentInstaller.cab' EmbedCab='yes' />
    <Directory Id='TARGETDIR' Name='SourceDir'>
      <Directory Id="SystemFolder" Name="SystemFolder" />
      <Directory Id='$(var.pf)'>
        <Directory Id='Citrix' Name='$(var.BRANDING_manufacturer)'>
          <Directory Id='INSTALLDIR' Name='$(var.BRANDING_shortTools)'>
            <Directory Id='BRANDING' Name='Branding'>
                <Component Id="BrandingCpy" Guid='*'>
                    <File Id="BrandSatDll" Name='brandsat.dll' DiskId='1' Source='BrandSupport\brandsat.dll' />
                </Component>
                <Component Id="BrandingSup" Guid='*'>
                    <File Id="BrandSupportDll" Name="BrandSupport.dll" DiskId='1' Source='BrandSupport\BrandSupport.dll' />
                </Component>
            </Directory>
            <Directory Id="diagnostics" Name="diagnostics">
                <Component Id="xtbugtool" Guid="*">
                    <File Id="xtbugtoolbat" Name="xtbugtool.bat" DiskId="1" Source="diagnostics\xtbugtool.bat" />
                </Component>
            </Directory>
            <Directory Id="netsettings" Name='netsettings'>
                  <Component Id="NetSettingsCpy" Guid="*">
                      <?if $(var.arch)=x86?> 
                          <File Id="NetSettingsExe" Name="NetSettings.exe" DiskId='1' Source='installwizard\netsettings\Win32\netsettings.exe' />
                      <?else?>
                          <File Id="NetSettingsExe" Name="NetSettings.exe" DiskId='1' Source='installwizard\netsettings\x64\netsettings.exe' />
                      <?endif?>
                  </Component>
                  <Component Id="QNetSettingsCpy" Guid="*">
                      <?if $(var.arch)=x86?> 
                          <File Id="QNetSettingsExe" Name="QNetSettings.exe" DiskId='1' Source='installwizard\qnetsettings\Win32\qnetsettings.exe' />
                      <?else?>
                          <File Id="QNetSettingsExe" Name="QNetSettings.exe" DiskId='1' Source='installwizard\qnetsettings\x64\qnetsettings.exe' />
                      <?endif?>
                  </Component>
            </Directory>

            <Merge Id='Drivers' Language='1033' SourceFile='drivergen$(var.arch).msm' DiskId='1' />

            <Component Id='dotnetagentsupport' Guid='$(var.supportid)'>
                <File Id="XenDPrivExe" Name="$(var.FILENAME_dpriv)" Source="xenguestagent\xendpriv\XenDPriv.exe" />
                <File Id="ManagementAgentUpdaterExe" Name="ManagementAgentUpdater.exe" Source="xenguestagent\xenupdater\ManagementAgentUpdater.exe" />
                <File Id='XenDprivExeConfig' Name="$(var.FILENAME_dprivcfg)" Source='xenguestagent\xendpriv\XenDpriv.Exe.Config' />
                <File Id='XenGuestAgentExeConfig' Name="$(var.FILENAME_agentcfg)" Source='xenguestagent\xenguestagent\XenGuestAgent.Exe.Config' />
                <File Id='InstallAgentExeConfig' Name="InstallAgent.exe.config" Source='InstallAgent\InstallAgent.exe.config' />
                <File Id="XenGuestLibDll" Name="XenGuestLib.Dll" Source="xenguestagent\xenguestagent\XenGuestLib.Dll" />
                <File Id="InteropNetFwTypeLibdll" Name="Interop.NetFwTypeLib.dll" Source="xenguestagent\xenguestagent\Interop.NetFwTypeLib.dll" />
                <File Id="InteropTaskSchedulerdll" Name="Interop.TaskScheduler.dll" Source="xenguestagent\xenupdater\Interop.TaskScheduler.dll" />
                <File Id='ManagementAgentUpdaterExeConfig' Name="ManagementAgentUpdater.Exe.Config" Source='xenguestagent\xenupdater\ManagementAgentUpdater.Exe.Config' />
                <File Id='UninstallerExeConfig' Name="Uninstall.Exe.Config" Source='Uninstall\Uninstall.exe.config' />
                <File Id='UninstallerExe' Name="Uninstall.Exe" Source='Uninstall\Uninstall.Exe' />
            </Component>
            <Component Id='XenVssComponent' Guid='$(var.XenVssComponentGUID)'>
                 <File Id='xenvss_dll' Name="XenVss.dll" DiskId='1' Source='xenvss\$(var.arch)\xenvss.dll' KeyPath='yes' />
                 <File Id='vssclient_dll' Name="VssClient.dll" Source='xenvss\$(var.arch)\vssclient.dll' />
                 <File Id='install_cmd' Name="$(var.FILENAME_installVSS)" Source='xenvss\install-XenProvider.cmd' />
                 <File Id='uninstall_cmd' Name="$(var.FILENAME_uninstallVSS)" Source='xenvss\uninstall-XenProvider.cmd' />
                 <File Id='regvss_vbs' Name="regvss.vbs" Source='xenvss\regvss.vbs' />
            </Component>
            <?if $(var.usecerts)=yes ?>
                <Directory Id="certsdir" Name="Certs">
                    <Component Id="Certs" Guid="$(var.certs)">
                        <File Id="CitrixSha1" Name="citrixsha1.cer" Source="$(var.RESOURCES_Bitmaps)\citrixsha1.cer" />
                        <File Id="CitrixSha256" Name="citrixsha256.cer" Source="$(var.RESOURCES_Bitmaps)\citrixsha256.cer" />
                    </Component>
                </Directory>
            <?endif?>
            <Component Id='XenService' Guid="*">
                <File Id='XenGuestAgent.Exe' Name='$(var.FILENAME_agent)' Source="xenguestagent\xenguestagent\xenguestagent.exe" />
                <ServiceInstall Id='XenServiceInstaller'
                      Type='ownProcess'
                      Vital='yes'
                      Name='$(var.BRANDING_guestServiceShort)'
                      DisplayName='$(var.Brand) $(var.Product) $(var.Agent)'
                      Description='$(var.BRANDING_guestServiceDesc)'
                      Start='auto'
                      Account='LocalSystem'
                      ErrorControl='ignore'
                      Interactive='no' >
                      <ServiceDependency Id='Winmgmt' />
                      <ServiceDependency Id='CryptSvc' />
               </ServiceInstall>

               <ServiceControl Id='StartService' 
                      Start='install' 
                      Stop='both' 
                      Remove='uninstall' 
                      Name='$(var.BRANDING_guestServiceShort)' 
                      Wait='yes' />
              </Component>

              <Component Id="InstallService" Guid="*">
                  <File Id='InstallAgent.exe' Name='InstallAgent.exe' Source="InstallAgent\InstallAgent.exe" />
                  <ServiceInstall Id='InstallServiceInstaller'
                      Type='ownProcess'
                      Vital='yes'
                      Name='$(var.BRANDING_installAgentShort)'
                      DisplayName='$(var.Brand) $(var.Product) $(var.Install)'
                      Description='$(var.BRANDING_installAgentDesc)'
                      Start='auto'
                      Account='LocalSystem'
                      ErrorControl='ignore'
                      Interactive='no'>
                      <ServiceDependency Id='Winmgmt' />
                      <ServiceDependency Id='CryptSvc' />
                  </ServiceInstall>
                  
                  <ServiceControl Id='StartInstallService' 
                      Start='install' 
                      Stop='both' 
                      Remove='uninstall' 
                      Name='$(var.BRANDING_installAgentShort)'
                      Wait='yes' />
              </Component>

              <Component Id="DifXAPIDLL64" Guid="*">
                  <File Id="difxapi64" Name="difxapi64.dll" Source="$(env.KIT)\Redist\DIFx\DIFxAPI\x64\difxapi.dll" />
              </Component>

              <Component Id="DifXAPIDLL32" Guid="*">
                  <File Id="difxapi32" Name="difxapi32.dll" Source="$(env.KIT)\Redist\DIFx\DIFxAPI\x86\difxapi.dll" />
              </Component>

              <Component Id="PInvokeWrapDLL" Guid="*">
                  <File Id="pinvokewrap" Name="PInvokeWrap.dll" Source="Libraries\PInvokeWrap.dll" />
              </Component>

              <Component Id="HelperFunctionsDLL" Guid="*">
                  <File Id="helperfunctions" Name="HelperFunctions.dll" Source="Libraries\HelperFunctions.dll" />
              </Component>

              <Component Id="HardwareDeviceDLL" Guid="*">
                  <File Id="hardwaredevice" Name="HardwareDevice.dll" Source="Libraries\HardwareDevice.dll" />
              </Component>

              <Component Id="PVDriversRemovalDLL" Guid="*">
                  <File Id="pvdriversremoval" Name="PVDriversRemoval.dll" Source="Libraries\PVDriversRemoval.dll" />
              </Component>

              <Component Id="XenConsoleCommDLL" Guid="*">
                  <File Id="xenconsolecomm" Name="XenConsoleComm.dll" Source="xenguestagent\XenConsoleComm\XenConsoleComm.dll" />
              </Component>

              <Component Id="IXenConsoleCommDLL" Guid="*">
                  <File Id="ixenconsolecomm" Name="IXenConsoleComm.dll" Source="xenguestagent\IXenConsoleComm\IXenConsoleComm.dll" />
              </Component>

          </Directory>
        </Directory>
      </Directory>
     
      <Component Id='RegEntry' Guid="$(var.RegEntryGuid)">
          <RegistryKey Root='HKLM'
              Key='Software\Citrix\XenTools' >
              <RegistryValue Type='string' Name='HostTime' Value='[HOSTTIME]' />
              <RegistryValue Type='integer' Name='MajorVersion' Value='$(var.CurrentMajorVersion)' />
              <RegistryValue Type='integer' Name='MinorVersion' Value='$(var.CurrentMinorVersion)' />
              <RegistryValue Type='integer' Name='MicroVersion' Value='$(var.CurrentMicroVersion)' />
              <RegistryValue Type='integer' Name='BuildVersion' Value='$(var.CurrentBuildVersion)' /> 
              <!-- BuildVersion, above, is the number we report to XAPI, so we report the hardcoded tools hotfix number, not the Jenkins build number -->
              <RegistryValue Type='string' Name='Install_Dir' Value='[INSTALLDIR]' />
              <RegistryValue Type='integer' Name='MsiGuestAgent' Value='1' />
              <RegistryValue Type='string' Name='Driver_Install_Dir' Value='[INSTALLDIR]\Drivers' />
              <RegistryValue Type='integer' Name="DisableAutoUpdate" Value='[DISABLEAUTOUPDATE]' />
          </RegistryKey> 
          <RegistryKey Root='HKLM'
              Key='SYSTEM\CurrentControlSet\Control'>
              <RegistryValue Type='integer' Name='ServicesPipeTimeout' Value='300000' />
          </RegistryKey>
  
          <RegistryKey Root='HKLM'
              Key='SOFTWARE\Microsoft\Windows\CurrentVersion\Setup\Sysprep\Settings\sppnp'>
              <RegistryValue Type='integer' Name='PersistAllDeviceInstalls' Value='1' />
          </RegistryKey>
      </Component>
      <Component Id='RegEntry32' Guid='3a428079-00d8-4c55-b314-321e757ff988' Win64='no'>
          <RegistryKey Root='HKLM'
              Key='Software\Citrix\XenTools' >
              <RegistryValue Type='string' Name='HostTime' Value='[HOSTTIME]' />
          </RegistryKey>
      </Component>
      <Component Id="AutoUpdateReg" Guid="*">
          <RegistryKey Root="HKLM" Key='Software\Citrix\XenTools\AutoUpdate'>
              <RegistryValue Type="string" Name="InstallDrivers" Value='[ALLOWDRIVERUPDATE]' />
              <RegistryValue Type="string" Name="Identify" Value='[IDENTIFYAUTOUPDATE]' />
          </RegistryKey>
      </Component>
      <Component Id="XenConsoleCommReg" Guid="*">
          <RegistryKey Root="HKLM" Key='Software\Citrix\XenTools\XenConsoleComm'>
              <RegistryValue Type="string" Name="DllPath" Value='[INSTALLDIR]XenConsoleComm.dll' />
          </RegistryKey>
      </Component>
      <Component Id="InstallAgentReg" Guid="15382399-a381-4ff1-8f8d-10ab8a31512e">
          <RegistryKey Root="HKLM"
              Key='$(var.BRANDING_installAgentRegKey)'>
              <RegistryValue Type='string' Name='RebootOption' Value='[REBOOTOPTION]' />
          </RegistryKey>
          <RegistryKey Root="HKLM"
              Key='$(var.BRANDING_installAgentRegKey)'>
              <RegistryValue Type='string' Name='InstallMode' Value='[INSTALLMODE]' />
          </RegistryKey>
          <RegistryKey Root="HKLM"
              Key='$(var.BRANDING_installAgentRegKey)'>
              <RegistryValue Type='string' Name='InstallerInitiatorSid' Value='[INITIATORSID]' />
          </RegistryKey>
          <RegistryKey Root="HKLM"
              Key='$(var.BRANDING_installAgentRegKey)'>
              <RegistryValue Type='string' Name='InstallDrivers' Value='[ALLOWDRIVERINSTALL]' />
          </RegistryKey>
          <RemoveRegistryKey Root="HKLM"
              Key='$(var.BRANDING_installAgentRegKey)'
              Action="removeOnInstall" />
          <RemoveRegistryKey Root="HKLM"
              Key='$(var.BRANDING_installAgentRegKey)'
              Action="removeOnUninstall" />
          <RemoveRegistryKey Root="HKLM"
              Key='Software\Citrix\XenToolsInstaller'
              Action="removeOnInstall" />
          <RemoveRegistryKey Root="HKLM"
              Key='Software\Citrix\XenToolsInstaller'
              Action="removeOnUninstall" />
      </Component>
      <Component Id="InstallAgentReg32" Guid="47883399-450c-40a4-bf4f-55f7a1515877">
          <RemoveRegistryKey Root="HKLM"
              Key='Software\Wow6432Node\Citrix\XenToolsInstaller'
              Action="removeOnInstall" />
          <RemoveRegistryKey Root="HKLM"
              Key='Software\Wow6432Node\Citrix\XenToolsInstaller'
              Action="removeOnUninstall" />
      </Component>

    </Directory>
      
      
    <Feature Id='Complete' Level='1'>
        <ComponentRef Id="xtbugtool" />
        <?if $(var.usecerts)=yes ?>
            <ComponentRef Id='Certs' />
        <?endif?>
        <ComponentRef Id='dotnetagentsupport'/>
        <MergeRef Id='Drivers' />
        <ComponentRef Id='NetSettingsCpy' />
        <ComponentRef Id='QNetSettingsCpy' />
        <ComponentRef Id='BrandingCpy' />
        <ComponentRef Id='BrandingSup' />
        <ComponentRef Id='PInvokeWrapDLL' />
        <ComponentRef Id='HelperFunctionsDLL' />
        <ComponentRef Id='HardwareDeviceDLL' />
        <ComponentRef Id='PVDriversRemovalDLL' />
        <ComponentRef Id='RegEntry'/>
        <ComponentRef Id='XenVssComponent'/>
        <ComponentRef Id='XenService'/>
        <ComponentRef Id="DifXAPIDLL64"/>
        <ComponentRef Id="DifXAPIDLL32"/>
        <ComponentRef Id="XenConsoleCommDLL"/>
        <ComponentRef Id="IXenConsoleCommDLL"/>
        <?if $(sys.BUILDARCH)=x64 ?>
            <ComponentRef Id='RegEntry32'/>
            <ComponentRef Id="InstallAgentReg32" />
        <?endif ?>
        <ComponentRef Id='InstallAgentReg'/>
        <ComponentRef Id='InstallService' />
        <ComponentRef Id='AutoUpdateReg' />
        <ComponentRef Id='XenConsoleCommReg' />
    </Feature>
    <?if $(sys.BUILDARCH)=x86 ?>
        <Feature Id="NotUsed" Level='0'>
            <ComponentRef Id='RegEntry32'/>
            <ComponentRef Id="InstallAgentReg32" />
        </Feature>
    <?endif ?>
  </Product>


</Wix>
